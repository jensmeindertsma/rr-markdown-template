name: ci
on: push
jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up PNPM
        uses: pnpm/action-setup@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Check formatting
        run: pnpm run format:check

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up PNPM
        uses: pnpm/action-setup@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Run linter
        run: pnpm run lint:check

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up PNPM
        uses: pnpm/action-setup@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Run typechecker
        run: pnpm run typecheck

  build:
    needs: [formatting, lint, typecheck]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          tags: rr-markdown-template:latest
          load: true
        env:
          DOCKER_BUILD_SUMMARY: false
          DOCKER_BUILD_RECORD_UPLOAD: false

      - name: Upload image
        if: github.ref == 'refs/heads/main'
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.CABIN_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.CABIN_HOST }} >> ~/.ssh/known_hosts
          docker save rr-markdown-template:latest | gzip | ssh -i ~/.ssh/id_ed25519 github@${{ secrets.CABIN_HOST }} "docker load"

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy the latest version
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.CABIN_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.CABIN_HOST }} >> ~/.ssh/known_hosts
          ssh -i ~/.ssh/id_ed25519 github@${{ secrets.CABIN_HOST }} "/var/lib/harbor/deploy.sh rr-markdown-template"
